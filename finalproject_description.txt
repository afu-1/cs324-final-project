jose write description yee

Annie: I was in charge of creating the colors dataset and scores class. For the colors dataset, I first created a JSON file to contain the color values. However, I ran into the issue of transforming the string hexcodes into the actual color integer so I resorted to changing the values into their RGB number values. From there, I tried to store the values into local dictionaries (where each RGB value had its own dictionary value) until I realized that a hashmap would be easier for storage. Afterwords, I started to work on the scores dataset where I had to relearn how to create a CSV file. From there, I ran into the challenge of displaying the scores sheet with new input values as a new row would have to coded in. As a result, I decided to create a class that handled all of the new score functionality and the displaying of scores. Theoretically, if the game would be able to reset, then saved high scores would be saved; however, Processing constantly resets the csv files with every time it runs, so it's difficult to transfer over old plays from old runs of the game.


Anthony: I created the GUIS for the game. The main gui is the startscreen of the game. The start screen requires multiple buttons to be added to the screeen that allow the user to choose the color of the dino. There is also functionality added that allows for a name to be created for the player. Creating the function to take the input of the name was slightly difficult becuase processing does no allow for input into the console like most other programming languages do. In order to create this functionality I had to use the keypressed functions included in processing. The next GUI was the timer. The timer was fairly straight forward to implement however originally we had a pause function that was included into the timer. However, the pause functionality proved difficult for my other team memebers and I and to implement so it was abandoned. The last GUI is the end screen that will display the end game score (the time on the timer) and the name of character. This screen was fairly simple to implement and worked well.